//
// This file modifies the default bootstrap grid
// Adding an xl breakpoint for big screens
// And an ms breakpoint for mid small screens (phones in landscape)
//

// Media queries breakpoints
// --------------------------------------------------

// Extra small screen / phone
// images for this size are 480w / 270h
@screen-xs:                  480px;
@screen-xs-min:              @screen-xs;
@screen-phone:               @screen-xs-min;

// Small screen / tablet
// images for this size are 768w / 432h
@screen-sm:                  768px;
@screen-sm-min:              @screen-sm;
@screen-tablet:              @screen-sm-min;

// Medium screen / desktop
@screen-md:                  992px;
@screen-md-min:              @screen-md;
@screen-desktop:             @screen-md-min;

// Large screen / wide desktop
@screen-lg:                  1200px;
@screen-lg-min:              @screen-lg;
@screen-lg-desktop:          @screen-lg-min;

// Extra Large screen / Extra wide desktop
@screen-xl:                  1650px;
@screen-xl-min:              @screen-xl;
@screen-xl-desktop:          @screen-xl-min;

// So media queries don't overlap when required, provide a maximum
@screen-xs-max:              (@screen-sm-min - 1);
@screen-sm-max:              (@screen-md-min - 1);
@screen-md-max:              (@screen-lg-min - 1);
@screen-lg-max:              (@screen-xl-min - 1);

// Container sizes
// --------------------------------------------------

// Small screen / tablet
@container-tablet:             ((720px + @grid-gutter-width));
@container-sm:                 @container-tablet;

// Medium screen / desktop
@container-desktop:            ((940px + @grid-gutter-width));
@container-md:                 @container-desktop;

// Large screen / wide desktop
@container-large-desktop:      ((1140px + @grid-gutter-width));
@container-lg:                 @container-large-desktop;

// Extra Large screen / extra wide desktop
@container-Xlarge-desktop:     ((1580px + @grid-gutter-width));
@container-xl:                 @container-Xlarge-desktop;

// Extra small grid
//
// Grid classes for extra small devices like smartphones. No offset, push, or
// pull classes are present here due to the size of the target.
//
// Note that `.col-xs-12` doesn't get floated on purpose--there's no need since
// it's full-width.

.make-grid(xs);

// Mid Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.
//
// Note that `.col-sm-12` doesn't get floated on purpose--there's no need since
// it's full-width.

@media (min-width: @screen-xs) {
    .container {
        max-width: @container-sm;
    }

    .make-grid(ms);
}

// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.
//
// Note that `.col-sm-12` doesn't get floated on purpose--there's no need since
// it's full-width.

@media (min-width: @screen-sm-min) {
    .container {
        width: @container-sm;
        max-width: none;
    }

    .make-grid(sm);
}


// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.
//
// Note that `.col-md-12` doesn't get floated on purpose--there's no need since
// it's full-width.

@media (min-width: @screen-md-min) {
    .container {
        width: @container-md;
        max-width: none;
    }

    .make-grid(md);
}


// Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.
//
// Note that `.col-lg-12` doesn't get floated on purpose--there's no need since
// it's full-width.

@media (min-width: @screen-lg-min) {
    .container {
        width: @container-lg;
        max-width: none;
    }

    .make-grid(lg);
}

// Extra Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.
//
// Note that `.col-lg-12` doesn't get floated on purpose--there's no need since
// it's full-width.

@media (min-width: @screen-xl-min) {
    .container {
        width: @container-xl;
        max-width: none;
    }

    .make-grid(xl);
}

// add a new col class allowing for 5 column layouts
.make-xl-column(@columns; @gutter: @grid-gutter-width) {
    position: relative;
    min-height: 1px;
    padding-left: (@gutter / 2);
    padding-right: (@gutter / 2);

    @media (min-width: @screen-xl-min) {
        float: left;
        width: percentage((@columns / @grid-columns));
    }
}
.col-xs-5ths {
    .make-xs-column(2.4);
}
.col-sm-5ths {
    .make-sm-column(2.4);
}
.col-md-5ths {
    .make-md-column(2.4);
}
.col-lg-5ths {
    .make-lg-column(2.4);
}
.col-xl-5ths {
    .make-xl-column(2.4);
}

@spacing-normal: 7px;
@spacing-large: 14px;
.row.padded, .padding-tb {
    padding-top: @spacing-normal;
    padding-bottom: @spacing-normal;
}
.row.extra-padded, .padding-large-tb {
    padding-top: @spacing-large;
    padding-bottom: @spacing-large;
}

.padding {
    padding: @spacing-normal;
}
.padding-large {
    padding: @spacing-large;
}

.padding-t {
    padding-top: @spacing-normal;
}
.padding-b {
    padding-bottom: @spacing-normal;
}
.padding-large-t {
    padding-top: @spacing-large;
}
.padding-large-b {
    padding-bottom: @spacing-large;
}

.padding-lr {
    padding-left: @spacing-normal;
    padding-right: @spacing-normal;
}
.padding-large-lr {
    padding-left: @spacing-large;
    padding-right: @spacing-large;
}
.padding-l {
    padding-left: @spacing-normal;
}
.padding-r {
    padding-right: @spacing-normal;
}
.padding-large-l {
    padding-left: @spacing-large;
}
.padding-large-r {
    padding-right: @spacing-large;
}

.margin {
    margin: @spacing-normal;
}
.margin-large {
    margin: @spacing-large;
}

.margin-tb {
    margin-top: @spacing-normal;
    margin-bottom: @spacing-normal;
}
.margin-large-tb {
    margin-top: @spacing-large;
    margin-bottom: @spacing-large;
}
.margin-t {
    margin-top: @spacing-normal;
}
.margin-b {
    margin-bottom: @spacing-normal;
}
.margin-large-t {
    margin-top: @spacing-large;
}
.margin-large-b {
    margin-bottom: @spacing-large;
}

.margin-lr {
    margin-left: @spacing-normal;
    margin-right: @spacing-normal;
}
.margin-large-lr {
    margin-left: @spacing-large;
    margin-right: @spacing-large;
}
.margin-l {
    margin-left: @spacing-normal;
}
.margin-r {
    margin-right: @spacing-normal;
}
.margin-large-l {
    margin-left: @spacing-large;
}
.margin-large-r {
    margin-right: @spacing-large;
}

.flexbox {
    display: flex;
}
.flex1 {
    flex: 1;
}
.flex2 {
    flex: 2;
}
.flex3 {
    flex: 3;
}

.relative {
    position: relative;
}


